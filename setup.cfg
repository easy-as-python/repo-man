[metadata]
name = repo-man
version = 0.0.10
description = Manage repositories of a variety of different types.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/easy-as-python/repo-man
author = Dane Hillard
author_email = "Dane Hillard" <github@danehillard.com>
license = MIT License
license_files = LICENSE
project_urls =
    Documentation=https://repo-man.readthedocs.org
    Source=https://github.com/easy-as-python/repo-man
    Tracker=https://github.com/easy-as-python/repo-man/issues
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Programming Language :: Python
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    License :: OSI Approved :: MIT License

[options]
python_requires = >=3.9
package_dir =
    =src
packages = find_namespace:
include_package_data = True
install_requires =
    typer[all]>=0.9.0

[options.packages.find]
where = src
exclude =
    test*

[options.entry_points]
console_scripts =
    repo-man = repo_man.cli:main

[options.extras_require]
docs =
    furo
    myst-parser
    sphinx
    sphinx-autobuild

######################
# Tool configuration #
######################

[mypy]
strict = True
python_version = 3.10
warn_unused_configs = True
show_error_context = True
pretty = True
namespace_packages = True
check_untyped_defs = True

[flake8]
max-line-length = 120

[tool:pytest]
testpaths = test
addopts = --cov --strict-markers
xfail_strict = True

[coverage:run]
source = repo_man
branch = True

[coverage:report]
fail_under = 90.00
show_missing = True
skip_covered = True

[coverage:paths]
source =
    src/repo_man
    */site-packages/repo_man

[tox:tox]
envlist = py39,py312
isolated_build = True

[testenv]
package = wheel
wheel_build_env = .pkg
deps =
    pytest
    pytest-cov
commands =
    pytest {posargs}

[testenv:typecheck]
deps =
    mypy
    pytest
    types-termcolor
commands =
    mypy {posargs:src test}

[testenv:format]
skip_install = True
deps =
    black
    isort
commands =
    black {posargs:--check --diff src test}
    isort {posargs:--check --diff src test}

[testenv:lint]
skip_install = True
deps =
    ruff
commands =
    ruff check {posargs:src test}

[testenv:docs]
extras =
    docs
commands =
    python --version
    sphinx-apidoc \
        --force \
        --implicit-namespaces \
        --module-first \
        --separate \
        -o docs/reference/ \
        src/repo_man/
    sphinx-build -n -W --keep-going -b html docs/ docs/_build/

[testenv:devdocs]
extras =
    docs
commands =
    sphinx-apidoc \
        --force \
        --implicit-namespaces \
        --module-first \
        --separate \
        -o docs/reference/ \
        src/repo_man/
    sphinx-autobuild -n -W -b html docs/ docs/_build/

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
requires-python = ">=3.9"
name = "repo-man"
version = "0.0.11"
description = "Manage repositories of a variety of different types."
authors = [
    { name = "Dane Hillard", email = "github@danehillard.com" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "typer>=0.12.5"
]

[project.urls]
Documentation = "https://repo-man.readthedocs.org"
Repository = "https://github.com/easy-as-python/repo-man"
Issues = "https://github.com/easy-as-python/repo-man/issues"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["test*"]

[project.scripts]
repo-man = "repo_man.cli:main"

[project.optional-dependencies]
docs = [
    "furo",
    "myst-parser",
    "sphinx",
    "sphinx-autobuild",
]

######################
# Tool configuration #
######################

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.mypy]
strict = true
python_version = "3.9"
warn_unused_configs = true
show_error_context = true
pretty = true
namespace_packages = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["test"]
addopts = ["--cov", "--strict-markers"]
xfail_strict = true

[tool.coverage.run]
source = ["repo_man"]
branch = true

[tool.coverage.report]
fail_under = 90.00
show_missing = true
skip_covered = true

[tool.coverage.paths]
source = [
    "src/repo_man",
    "*/site-packages/repo_man",
]

[tool.tox]
envlist = ["py39", "py310", "py311", "py312", "py313"]
isolated_build = true

[tool.tox.env_run_base]
package = "wheel"
wheel_build_env = ".pkg"
deps = [
    "pytest",
    "pytest-cov",
    "pytest-randomly",
]
commands = [
    ["pytest", { replace = "posargs", default = [], extend = true }],
]

[tool.tox.env.typecheck]
deps = [
    { replace = "ref", of = ["tool", "tox", "env_run_base", "deps"], extend = true },
    "mypy",
    "types-termcolor",
]
commands = [
    ["mypy", { replace = "posargs", default = ["src", "test"], extend = true }],
]

[tool.tox.env.format]
skip_install = true
deps = [
    "ruff",
]
commands = [
    ["ruff", "format", { replace = "posargs", default = ["--check", "--diff", "src", "test"], extend = true }],
]

[tool.tox.env.lint]
skip_install = true
deps = [
    "ruff",
]
commands = [
    ["ruff", "check", { replace = "posargs", default = ["src", "test"], extend = true }],
]

[tool.tox.env.docs]
extras = [
    "docs",
]
commands = [
    ["sphinx-apidoc", "--force", "--implicit-namespaces", "--module-first", "--separate", "-o", "docs/reference", "src/repo_man/"],
    ["sphinx-build", "-n", "-W", "--keep-going", "-b", "html", "docs/", "docs/_build/"],
]

[tool.tox.env.devdocs]
extras = [
    "docs",
]
commands = [
    ["sphinx-apidoc", "--force", "--implicit-namespaces", "--module-first", "--separate", "-o", "docs/reference", "src/repo_man/"],
    ["sphinx-autobuild", "-n", "-W", "-b", "html", "docs/", "docs/_build/"],
]
